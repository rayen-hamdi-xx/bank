{"ast":null,"code":"import axios from\"axios\";import dayjs from\"dayjs\";import{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Form1(props){const[response,setResponse]=useState(null);const[data,setdata]=useState({first:'',family:'',cin:'',email:'',rib:'',balance:''});const date=dayjs().format('YYYY-MM-DD');const handle=e=>{const{name,value}=e.target;setdata({...data,[name]:value});};const sendSoapRequest=async()=>{const url='http://127.0.0.1:8000/bank/management/';const soapEnvelope=`<x:Envelope\n        xmlns:x=\"http://schemas.xmlsoap.org/soap/envelope/\"\n        xmlns:ban=\"bank.isg.tn\"\n        xmlns:ban1=\"bank_account_transaction_management.ComplexTypes\">\n        <x:Header/>\n        <x:Body>\n            <ban:add_account>\n                <ban:account>\n                    <ban1:rib>${data.rib}</ban1:rib>\n                    <ban1:client>\n                        <ban1:cin>${data.cin}</ban1:cin>\n                        <ban1:name>${data.first}</ban1:name>\n                        <ban1:familyName>${data.family}</ban1:familyName>\n                        <ban1:email>${data.email}</ban1:email>\n                    </ban1:client>\n                    <ban1:balance>${data.balance}</ban1:balance>\n                    <ban1:AccountType>?</ban1:AccountType>\n                    <ban1:creationDate>${date}</ban1:creationDate>\n                </ban:account>\n            </ban:add_account>\n        </x:Body>\n    </x:Envelope>`;const config={headers:{'Content-Type':'text/xml;charset=UTF-8'}};try{var _xmlDoc$getElementsBy;const response=await axios.post(url,soapEnvelope,config);// Parse the XML response using DOMParser\nconst parser=new DOMParser();const xmlDoc=parser.parseFromString(response.data,\"text/xml\");// Extract the success message from the XML\nconst successMessage=(_xmlDoc$getElementsBy=xmlDoc.getElementsByTagName(\"tns:add_accountResult\")[0])===null||_xmlDoc$getElementsBy===void 0?void 0:_xmlDoc$getElementsBy.textContent;if(successMessage){setResponse(successMessage);// Set the response state\n}else{setResponse('No success message in response.');}}catch(error){console.error('SOAP request error:',error);setResponse('Error occurred while adding the account');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendSoapRequest,className:\"text-neutral-800 transition-all duration-300 font-regular text-[18px] px-8 w-full flex flex-col items-center gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-8 w-full h-full items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"first\",children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"first\",value:data.first,onChange:handle,name:\"first\",className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"family\",children:\"Family Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"family\",value:data.family,onChange:handle,name:\"family\",className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-8 w-full h-full items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"cin\",children:\"CIN\"}),/*#__PURE__*/_jsx(\"input\",{id:\"cin\",name:\"cin\",value:data.cin,onChange:handle,className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",name:\"email\",value:data.email,onChange:handle,className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-8 w-full h-full items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"rib\",children:\"RIB\"}),/*#__PURE__*/_jsx(\"input\",{id:\"rib\",name:\"rib\",value:data.rib,onChange:handle,className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-1 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"balance\",children:\"Initial Balance\"}),/*#__PURE__*/_jsx(\"input\",{id:\"balance\",name:\"balance\",value:data.balance,onChange:handle,className:\"ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 \"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"py-2 px-6 bg-neutral-800 hover:bg-neutral-900 transition-all duration-300  text-white rounded-md mt-4 w-full\",children:\" Add Account  \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-[16px] text-neutral-600 flex justify-center ml-6 gap-5 w-full\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"hover:text-neutral-800\",onClick:()=>props.setForm(true),children:\" View Account\"}),\"-\",/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"hover:text-neutral-800\",children:\"View All Accounts \"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:response})]});}","map":{"version":3,"names":["axios","dayjs","useState","jsx","_jsx","jsxs","_jsxs","Form1","props","response","setResponse","data","setdata","first","family","cin","email","rib","balance","date","format","handle","e","name","value","target","sendSoapRequest","url","soapEnvelope","config","headers","_xmlDoc$getElementsBy","post","parser","DOMParser","xmlDoc","parseFromString","successMessage","getElementsByTagName","textContent","error","console","onSubmit","className","children","for","id","onChange","type","onClick","setForm"],"sources":["C:/Users/blade/OneDrive/Desktop/jdango/bank/bank_ui/src/form1.jsx"],"sourcesContent":["    import axios from \"axios\";\r\n    import dayjs from \"dayjs\";\r\n    import { useState } from \"react\";\r\n\r\n    export default function Form1(props) {\r\n        const [response, setResponse] = useState(null);\r\n        const [data,setdata]=useState(\r\n            {\r\n                first :'',\r\n                family : '',\r\n                cin: '',\r\n                email: '',\r\n                rib: '',\r\n                balance: '',\r\n            }\r\n        );\r\n        const date  = dayjs().format('YYYY-MM-DD');\r\n        const handle = (e) => {\r\n            const { name, value } = e.target;\r\n            setdata({ ...data, [name]: value });\r\n        };\r\n\r\n\r\n        const sendSoapRequest = async () => {\r\n            const url = 'http://127.0.0.1:8000/bank/management/'; \r\n            const soapEnvelope = `<x:Envelope\r\n        xmlns:x=\"http://schemas.xmlsoap.org/soap/envelope/\"\r\n        xmlns:ban=\"bank.isg.tn\"\r\n        xmlns:ban1=\"bank_account_transaction_management.ComplexTypes\">\r\n        <x:Header/>\r\n        <x:Body>\r\n            <ban:add_account>\r\n                <ban:account>\r\n                    <ban1:rib>${data.rib}</ban1:rib>\r\n                    <ban1:client>\r\n                        <ban1:cin>${data.cin}</ban1:cin>\r\n                        <ban1:name>${data.first}</ban1:name>\r\n                        <ban1:familyName>${data.family}</ban1:familyName>\r\n                        <ban1:email>${data.email}</ban1:email>\r\n                    </ban1:client>\r\n                    <ban1:balance>${data.balance}</ban1:balance>\r\n                    <ban1:AccountType>?</ban1:AccountType>\r\n                    <ban1:creationDate>${date}</ban1:creationDate>\r\n                </ban:account>\r\n            </ban:add_account>\r\n        </x:Body>\r\n    </x:Envelope>`;\r\n        \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'text/xml;charset=UTF-8',\r\n        },\r\n    };\r\n\r\n    try {\r\n        const response = await axios.post(url, soapEnvelope, config);\r\n        \r\n        // Parse the XML response using DOMParser\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(response.data, \"text/xml\");\r\n\r\n        // Extract the success message from the XML\r\n        const successMessage = xmlDoc.getElementsByTagName(\"tns:add_accountResult\")[0]?.textContent;\r\n\r\n        if (successMessage) {\r\n            setResponse(successMessage); // Set the response state\r\n        } else {\r\n            setResponse('No success message in response.');\r\n        }\r\n    } catch (error) {\r\n        console.error('SOAP request error:', error);\r\n        setResponse('Error occurred while adding the account');\r\n    }\r\n};\r\n\r\n        \r\n        return (\r\n            <form onSubmit={sendSoapRequest} className='text-neutral-800 transition-all duration-300 font-regular text-[18px] px-8 w-full flex flex-col items-center gap-6'>\r\n                <div className='flex gap-8 w-full h-full items-center'>\r\n                    <div className='flex flex-col gap-1 w-full'>\r\n                        <label  for='first'>First Name</label>\r\n                        <input id='first' value={data.first} onChange={handle} name='first' className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                    </div>\r\n                    <div className='flex flex-col gap-1 w-full'>\r\n                        <label  for='family'>Family Name</label>\r\n                        <input id='family' value={data.family} onChange={handle}  name='family' className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                    </div>\r\n                </div>\r\n                <div className='flex gap-8 w-full h-full items-center'>\r\n                    <div className='flex flex-col gap-1 w-full'>\r\n                        <label  for='cin'>CIN</label>\r\n                        <input id='cin' name=\"cin\" value={data.cin} onChange={handle}  className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                    </div>\r\n                    <div className='flex flex-col gap-1 w-full'>\r\n                        <label  for='email'>Email</label>\r\n                        <input id='email' name=\"email\" value={data.email} onChange={handle}  className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                    </div>\r\n                </div>\r\n\r\n            <div className='flex gap-8 w-full h-full items-center'>\r\n                <div className='flex flex-col gap-1 w-full'>\r\n                    <label  for='rib'>RIB</label>\r\n                    <input id='rib' name=\"rib\" value={data.rib} onChange={handle}  className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                </div>\r\n                <div className='flex flex-col gap-1 w-full'>\r\n                    <label  for='balance'>Initial Balance</label>\r\n                    <input id='balance' name=\"balance\" value={data.balance} onChange={handle}  className='ring-1 ring-neutral-500 rounded-sm outline-none px-2 py-1 text-[16px] text-neutral-700 '></input>\r\n                </div>\r\n            </div>\r\n                <button  type=\"submit\" className='py-2 px-6 bg-neutral-800 hover:bg-neutral-900 transition-all duration-300  text-white rounded-md mt-4 w-full'> Add Account  </button>\r\n                <div className='text-[16px] text-neutral-600 flex justify-center ml-6 gap-5 w-full'>\r\n                    <button type='button' className='hover:text-neutral-800' onClick={()=>props.setForm(true)}> View Account</button>\r\n                    -\r\n                    <button type='button'  className='hover:text-neutral-800'>View All Accounts </button>\r\n                </div>\r\n                <p className=\"text-red-500\">{response}</p>\r\n            </form>\r\n        )\r\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}